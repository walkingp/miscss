@import "reset";
@import "var";

/* background-color 
   text-color
*/
@each $key, $color in $colors {
  .bg-#{$key} {
    background-color: $color;
  }
  .text-#{$key} {
    color: $color;
  }
}

/* text-overflow */
.overflow-omit {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

@for $line from 1 through 3 {
  .overflow-#{$line} {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    overflow: hidden;
  }
}

/* text-align */
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}

@each $type in $cursor-type {
  .cursor-#{$type} {
    cursor: $type;
  }
}

/* font-size */
@each $key, $size in $font-sizes {
  .fs-#{$key} {
    font-size: $size * $base-font-size;
  }
}

/* white-space */
@each $type in $white-space-type {
  .text-#{$type} {
    white-space: $type;
  }
}

/* link */
@each $name, $color in $colors {
  .#{$name} {
    color: $color;
  }
  .link-#{$name} {
    color: $color;
    text-decoration: none;
    cursor: pointer;
    &:hover,
    &:active,
    &:focus {
      color: darken($color, 10%);
      text-decoration: underline;
    }
  }
}
$flex-direction: (
  row: row,
  row-reverse: row-reverse,
  column: column,
  column-reverse: column-reverse
);
/* display */
@each $type in $display-type {
  .d-#{$type} {
    display: #{$type};
  }
}

.hide {
  display: none;
}

.show {
  display: block;
}

/* visibility */
.visible {
  visibility: visible;
}

.hidden {
  visibility: hidden;
}

/* float */
.float-left {
  float: left;
}
.float-right {
  float: right;
}
.clear {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/* position */
@each $type in $position-type {
  .#{$type} {
    position: $type;
  }
}

/* flex */
.flex {
  display: flex;
  &.flex-wrap {
    flex-wrap: wrap;
  }
  .flex-none {
    flex: none;
  }
  .flex-auto {
    flex: auto;
  }
  &.space-between {
    justify-content: space-between;
  }
  &.space-around {
    justify-content: space-around;
  }
  @each $key, $value in $flex-direction {
    &.#{$key} {
      flex-direction: $value;
    }
  }
  @each $key, $value in $flex-attr {
    &.align-#{$key} {
      align-items: $value;
    }
    &.justify-#{$key} {
      justify-content: $value;
    }
  }
}

/* padding margin */
.margin-auto {
  margin-left: auto;
  margin-right: auto;
}
@each $dim in $dimensions {
  @each $dir in $directions {
    @each $size in $spacing-sizes {
      // padding-top-xs
      $result: nth($size, 2) * $base-spacing-size;
      .#{nth($dim, 2)}-#{nth($dir, 2)}-#{nth($size, 1)} {
        #{nth($dim, 2)}-#{nth($dir, 2)}: $result;
      }
    }
  }

  @each $size in $spacing-sizes {
    // padding-xs
    $result: nth($size, 2) * $base-spacing-size;
    .#{nth($dim, 2)}-#{nth($size, 1)} {
      #{nth($dim, 2)}: $result;
    }
  }
  // padding-x-xs
  @each $size in $spacing-sizes {
    $result: nth($size, 2) * $base-spacing-size;
    .#{nth($dim, 2)}-x-#{nth($size, 1)} {
      #{nth($dim, 2)}-left: $result;
      #{nth($dim, 2)}-right: $result;
    }
  }
  // padding-y-xs
  @each $size in $spacing-sizes {
    $result: nth($size, 2) * $base-spacing-size;
    .#{nth($dim, 2)}-y-#{nth($size, 1)} {
      #{nth($dim, 2)}-top: $result;
      #{nth($dim, 2)}-bottom: $result;
    }
  }
}

/* border */
@each $dir in $directions {
  @each $color in $border-colors {
    .border-#{nth($dir, 2)}-#{nth($color,1)} {
      border-#{nth($dir, 2)}: solid 1px #{nth($color, 2)};
    }
  }
  .border-#{nth($dir, 2)} {
    border-#{nth($dir, 2)}: solid 1px $color-border;
  }
}

/* background-color */
@each $name, $color in $colors {
  .bg-#{$name} {
    background-color: $color;
  }
}

/* line-height */
@for $i from 0 to 10 {
  .lineheight_#{$i} {
    line-height: #{$i}em;
  }
}

/* h1-h6 */
@for $i from 1 to 7 {
  h#{$i},
  .h#{$i} {
    font-size: #{3- (2/5 * ($i - 1))}rem;
  }
}
